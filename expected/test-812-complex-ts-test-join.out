set mv_rewrite.log_match_progress = 'true';
explain (verbose, costs off)
select * from events_all_room;
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test99
INFO:  mv_rewrite_check_group_clauses_for_mv: looking to rewrite JOIN, but MV is GROUP BY.
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.events_all_room_mv
INFO:  mv_rewrite_join_node_is_valid_for_plan_recurse: no match found in plan for MV rtindex: 3; MV Oid: 0
INFO:  mv_rewrite_join_node_is_valid_for_plan_recurse: left side of join is not valid for plan: {RANGETBLREF :rtindex 3}
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test99
INFO:  mv_rewrite_check_group_clauses_for_mv: looking to rewrite JOIN, but MV is GROUP BY.
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.events_all_room_mv
INFO:  mv_rewrite_join_node_is_valid_for_plan_recurse: no match found in plan for MV rtindex: 3; MV Oid: 0
INFO:  mv_rewrite_join_node_is_valid_for_plan_recurse: left side of join is not valid for plan: {RANGETBLREF :rtindex 3}
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test99
INFO:  mv_rewrite_check_group_clauses_for_mv: looking to rewrite JOIN, but MV is GROUP BY.
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.events_all_room_mv
INFO:  mv_rewrite_add_rewritten_mv_paths: creating and adding path for alternate query: {QUERY :commandType 1 :querySource 0 :canSetTag false :utilityStmt <> :resultRelation 0 :hasAggs false :hasWindowFuncs false :hasTargetSRFs false :hasSubLinks false :hasDistinctOn false :hasRecursive false :hasModifyingCTE false :hasForUpdate false :hasRowSecurity false :cteList <> :rtable ({RTE :alias <> :eref {ALIAS :aliasname public.events_all_room_mv :colnames ("timestamp" "hc1" "hc2" "category" "subcategory" "advices" "warnings" "detail" "room_name")} :rtekind 0 :relid 16548 :relkind m :tablesample <> :lateral false :inh true :inFromCl true :requiredPerms 2 :checkAsUser 0 :selectedCols (b) :insertedCols (b) :updatedCols (b) :securityQuals <>}) :jointree {FROMEXPR :fromlist ({RANGETBLREF :rtindex 1}) :quals <>} :targetList ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 1184 :vartypmod -1 :varcollid 0 :varlevelsup 0 :varnoold 1 :varoattno 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 4 :location -1} :resno 4 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 5 :vartype 25 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 5 :location -1} :resno 5 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 6 :vartype 3802 :vartypmod -1 :varcollid 0 :varlevelsup 0 :varnoold 1 :varoattno 6 :location -1} :resno 6 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 7 :vartype 25 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 7 :location -1} :resno 7 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 8 :vartype 701 :vartypmod -1 :varcollid 0 :varlevelsup 0 :varnoold 1 :varoattno 8 :location -1} :resno 8 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 9 :vartype 1043 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 9 :location -1} :resno 9 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false}) :override 0 :onConflict <> :returningList <> :groupClause <> :groupingSets <> :havingQual <> :windowClause <> :distinctClause <> :sortClause <> :limitOffset <> :limitCount <> :rowMarks <> :setOperations <> :constraintDeps <> :stmt_location 0 :stmt_len 0}
INFO:  mv_rewrite_add_rewritten_mv_paths: path added.
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test99
INFO:  mv_rewrite_check_group_clauses_for_mv: looking to rewrite JOIN, but MV is GROUP BY.
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.events_all_room_mv
INFO:  mv_rewrite_add_rewritten_mv_paths: creating and adding path for alternate query: {QUERY :commandType 1 :querySource 0 :canSetTag false :utilityStmt <> :resultRelation 0 :hasAggs false :hasWindowFuncs false :hasTargetSRFs false :hasSubLinks false :hasDistinctOn false :hasRecursive false :hasModifyingCTE false :hasForUpdate false :hasRowSecurity false :cteList <> :rtable ({RTE :alias <> :eref {ALIAS :aliasname public.events_all_room_mv :colnames ("timestamp" "hc1" "hc2" "category" "subcategory" "advices" "warnings" "detail" "room_name")} :rtekind 0 :relid 16548 :relkind m :tablesample <> :lateral false :inh true :inFromCl true :requiredPerms 2 :checkAsUser 0 :selectedCols (b) :insertedCols (b) :updatedCols (b) :securityQuals <>}) :jointree {FROMEXPR :fromlist ({RANGETBLREF :rtindex 1}) :quals <>} :targetList ({TARGETENTRY :expr {VAR :varno 1 :varattno 1 :vartype 1184 :vartypmod -1 :varcollid 0 :varlevelsup 0 :varnoold 1 :varoattno 1 :location -1} :resno 1 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 2 :vartype 25 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 2 :location -1} :resno 2 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 3 :vartype 25 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 3 :location -1} :resno 3 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 4 :vartype 25 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 4 :location -1} :resno 4 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 5 :vartype 25 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 5 :location -1} :resno 5 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 6 :vartype 3802 :vartypmod -1 :varcollid 0 :varlevelsup 0 :varnoold 1 :varoattno 6 :location -1} :resno 6 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 7 :vartype 25 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 7 :location -1} :resno 7 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 8 :vartype 701 :vartypmod -1 :varcollid 0 :varlevelsup 0 :varnoold 1 :varoattno 8 :location -1} :resno 8 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false} {TARGETENTRY :expr {VAR :varno 1 :varattno 9 :vartype 1043 :vartypmod -1 :varcollid 100 :varlevelsup 0 :varnoold 1 :varoattno 9 :location -1} :resno 9 :resname <> :ressortgroupref 0 :resorigtbl 0 :resorigcol 0 :resjunk false}) :override 0 :onConflict <> :returningList <> :groupClause <> :groupingSets <> :havingQual <> :windowClause <> :distinctClause <> :sortClause <> :limitOffset <> :limitCount <> :rowMarks <> :setOperations <> :constraintDeps <> :stmt_location 0 :stmt_len 0}
INFO:  mv_rewrite_add_rewritten_mv_paths: path added.
                                                QUERY PLAN                                                 
-----------------------------------------------------------------------------------------------------------
 Custom Scan (MVRewriteScan)
   Output: e."timestamp", e.hc1, e.hc2, e.category, e.subcategory, e.advices, e.warnings, e.detail, r.name
   Rewritten: scan of public.events_all_room_mv
(3 rows)

