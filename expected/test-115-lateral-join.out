-- Anticipate message "query requires unsupported features"
set mv_rewrite.log_match_progress = 'true';
explain (VERBOSE, COSTS OFF)
select t.key, COUNT (lt.value)
  from
    test t,
    lateral (
      select key, value
        from test tt
        where t.key = tt.key
          and tt.value = (t.value::numeric + 1)::text
	) lt
  where t.value::numeric < 50
  group by t.key;
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test_mv1
INFO:  mv_rewrite_join_node_is_valid_for_plan: the query does not involve all relations joined by the MV
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test_mv2
INFO:  mv_rewrite_join_clauses_are_valid: MV expression ((hidden = 'hidden2'::text)) not found in clauses in the query.
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test_expr_mv1
INFO:  mv_rewrite_join_node_is_valid_for_plan: the query does not involve all relations joined by the MV
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test_union_mv1
INFO:  mv_rewrite_join_node_is_valid_for_plan: the query does not involve all relations joined by the MV
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test_union_mv2
INFO:  mv_rewrite_join_node_is_valid_for_plan: the query does not involve all relations joined by the MV
                                                    QUERY PLAN                                                     
-------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate
   Output: t.key, count(tt.value)
   Group Key: t.key
   ->  Gather Merge
         Output: t.key, (PARTIAL count(tt.value))
         Workers Planned: 2
         ->  Partial GroupAggregate
               Output: t.key, PARTIAL count(tt.value)
               Group Key: t.key
               ->  Merge Join
                     Output: t.key, tt.value
                     Merge Cond: ((tt.key = t.key) AND (tt.value = ((((t.value)::numeric + '1'::numeric))::text)))
                     ->  Sort
                           Output: tt.value, tt.key
                           Sort Key: tt.key, tt.value
                           ->  Parallel Seq Scan on public.test tt
                                 Output: tt.value, tt.key
                     ->  Materialize
                           Output: t.key, t.value, ((((t.value)::numeric + '1'::numeric))::text)
                           ->  Sort
                                 Output: t.key, t.value, ((((t.value)::numeric + '1'::numeric))::text)
                                 Sort Key: t.key, ((((t.value)::numeric + '1'::numeric))::text)
                                 ->  Seq Scan on public.test t
                                       Output: t.key, t.value, (((t.value)::numeric + '1'::numeric))::text
                                       Filter: ((t.value)::numeric < '50'::numeric)
(25 rows)

select t.key, COUNT (lt.value)
  from
    test t,
    lateral (
      select key, value
        from test tt
        where t.key = tt.key
          and tt.value = (t.value::numeric + 1)::text
	) lt
  where t.value::numeric < 50
  group by t.key;
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test_mv1
INFO:  mv_rewrite_join_node_is_valid_for_plan: the query does not involve all relations joined by the MV
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test_mv2
INFO:  mv_rewrite_join_clauses_are_valid: MV expression ((hidden = 'hidden2'::text)) not found in clauses in the query.
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test_expr_mv1
INFO:  mv_rewrite_join_node_is_valid_for_plan: the query does not involve all relations joined by the MV
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test_union_mv1
INFO:  mv_rewrite_join_node_is_valid_for_plan: the query does not involve all relations joined by the MV
INFO:  mv_rewrite_add_rewritten_mv_paths: evaluating MV: public.test_union_mv2
INFO:  mv_rewrite_join_node_is_valid_for_plan: the query does not involve all relations joined by the MV
 key  | count 
------+-------
 key1 |     9
 key2 |    49
(2 rows)

